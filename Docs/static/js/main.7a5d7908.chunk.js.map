{"version":3,"sources":["components/CategoryAdd.js","Helpers/getGifs.js","components/GifGridItem.js","components/GitGrid.js","Hooks/useFetchGifs.js","GitExpert.js","index.js"],"names":["CategoryAdd","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","cats","type","value","onChange","target","getGits","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GitGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","GitExpert","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAERC,mBAAS,KAFD,mBAErCC,EAFqC,KAEzBC,EAFyB,KAa5C,OACI,sBAAMC,SAPW,SAACC,GAClBA,EAAEC,iBAGFN,GAAe,SAAAO,GAAI,OAAIL,GAAJ,mBAAmBK,QAGtC,SACG,uBACGC,KAAO,OACPC,MAAQP,EACRQ,SAfe,SAACL,GACtBF,EAAcE,EAAEM,OAAOF,a,+BCPlBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbC,EAFa,gDAEkCC,UAAUH,GAF5C,+DAGAI,MAAMF,GAHN,cAGbG,EAHa,gBAIEA,EAAKC,OAJP,uBAIZC,EAJY,EAIZA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAAO,IAAD,EACxB,MAAM,CACFC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVvB,kBAeZM,GAfY,4CAAH,sDCEPO,EAAc,SAAC,GAAiB,IAAhBH,EAAe,EAAfA,MAAMV,EAAS,EAATA,IAE/B,OACI,sBAAKc,UAAU,yCAAf,UACC,qBAAKC,IAAMf,EAAMgB,IAAMN,IACX,kCAAMA,EAAN,WCFRO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAAc,ECFV,SAACA,GAAc,IAAD,EAEdZ,mBAAS,CAC/BmB,KAAK,GACLa,SAAS,IAJ2B,mBAEjCC,EAFiC,KAE1BC,EAF0B,KAqBxC,OAbCC,qBAAU,WACLxB,EAAQC,GACPwB,MAAK,SAAAC,GAEEH,EAAS,CACLf,KAAMkB,EACNL,SAAQ,SAKtB,CAACpB,IAEEqB,EDjBwBK,CAAa1B,GAA/Ba,EAFuB,EAE7BN,KAAca,EAFe,EAEfA,QAQpB,OACI,qCACA,oBAAIJ,UAAY,kCAAhB,SAAmDhB,IAEnDoB,GAAW,mBAAGJ,UAAY,mCAAf,qBAEZ,qBAAKA,UAAY,YAAjB,SAIaH,EAAOJ,KAAK,SAAAC,GAAG,OACX,cAAC,EAAD,eAESA,GADCA,EAAIC,aEtBzBgB,EAAY,WAAM,MAEQvC,mBAAS,CAAC,cAFlB,mBAEpBwC,EAFoB,KAETzC,EAFS,KAO3B,OACI,gCACI,8CACA,cAAC,EAAD,CAAaA,cAAiBA,IAC9B,uBAEA,6BAEQyC,EAAWnB,KAAI,SAAAT,GAAQ,OACtB,cAAC,EAAD,CAEAA,SAAYA,GADNA,Y,MChB3B6B,IAASC,OAEL,cAAC,EAAD,IAEFC,SAASC,eAAe,W","file":"static/js/main.7a5d7908.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const CategoryAdd = ({setCategories}) => {\r\n\r\n    const [inputValue, setInputValue] = useState(' ')\r\n    const handleInputChage = (e) =>{\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) =>{\r\n        e.preventDefault();\r\n\r\n        //console.log('submit hecho')\r\n        setCategories (cats=> [inputValue, ...cats])\r\n    }\r\n    return (\r\n        <form onSubmit ={handleSubmit}>\r\n           <input\r\n              type = \"text\" \r\n              value ={inputValue}\r\n              onChange={handleInputChage}\r\n           /> \r\n        </form>\r\n    )\r\n}\r\n\r\nCategoryAdd.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}","export const getGits = async (category) => {\r\n\r\n    const url = `http://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=gQAylBOLstQMoQT0uVrXYoblpq5H85pA`;\r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json();\r\n        \r\n    const gifs = data.map(img =>{\r\n        return{\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n\r\n\r\n    return gifs;\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({title,url}) => {\r\n    //console.log(title, url)\r\n    return (\r\n        <div className=\"card animate__animated animate__zoomIn\">\r\n         <img src={ url } alt={ title } />\r\n                     <p> { title } </p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../Hooks/useFetchGifs'\r\n// import { getGits } from '../Helpers/getGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GitGrid = ({category}) => {\r\n\r\n   const {data: images, loading}= useFetchGifs(category);\r\n    // const [images, setImages] = useState([])\r\n    // useEffect(()=>{\r\n    //     getGits(category).then (setImages);\r\n    // },[category])\r\n   \r\n\r\n\r\n    return (\r\n        <>\r\n        <h3 className = 'animate__animated animate__flip'>{category}</h3>\r\n\r\n       {loading && <p className = 'animate__animated animate__flash'>Loading</p>}\r\n\r\n       <div className = 'card-grid'>\r\n           \r\n            \r\n            {\r\n                    images.map( img => (\r\n                        <GifGridItem \r\n                            key={ img.id }\r\n                            { ...img }\r\n                        />\r\n                    ))\r\n                }\r\n        </div>\r\n   \r\n        </>\r\n      )   \r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGits } from '../Helpers/getGifs';\r\n \r\n export const useFetchGifs = (category) => {\r\n     \r\n   const [state, setstate] = useState({\r\n       data:[],\r\n       loading: true\r\n   });\r\n\r\n\r\n    useEffect(() => {\r\n         getGits(category)\r\n         .then(imgs => {\r\n            \r\n                 setstate({\r\n                     data: imgs,\r\n                     loading:false\r\n                 });\r\n          \r\n         })\r\n       \r\n    }, [category])\r\n\r\n   return state\r\n }\r\n ","import React,{ useState} from 'react'\r\nimport { CategoryAdd } from './components/CategoryAdd'\r\nimport {GitGrid} from './components/GitGrid'\r\n\r\n\r\nexport const GitExpert = () => {\r\n    //const categories = ['one punch','samurai X', 'dragon ball']\r\n    const [categories,setCategories] = useState(['one punch'])\r\n    /* const handleAdd = ()=>{\r\n       // setCategories ([...categories,'hunterXHunter']\r\n       setCategories (cats=> [...categories,'hunterXHunter'])\r\n    } */\r\n    return (\r\n        <div>\r\n            <h1>GitExpertApp</h1>\r\n            <CategoryAdd setCategories = {setCategories} />\r\n            <hr />\r\n            \r\n            <ol>\r\n                {\r\n                    categories.map(category=>\r\n                     <GitGrid  \r\n                     key ={category}\r\n                     category = {category}\r\n                     />                    )\r\n                }\r\n            </ol>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GitExpert } from './GitExpert';\nimport './index.css';\n\n\nReactDOM.render(\n  \n    <GitExpert />,\n\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}